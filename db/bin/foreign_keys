#!/bin/bash

this_script=`basename $0`
helping=false

# Use this function to be verbose
function tell () {

	level="${1}"
	msg="${2}"

	if [ "${verbose}" -ge "${level}" ] ; then

		echo "INFO ${this_script}: ${msg}"
	fi
}

# Use this function to warn without exit
function warn () {

	msg="${1}"

	echo "WARNING ${this_script}: ${msg}" 1>&2
}

# Use this function to exit on error
function die () {

	exit_code="${1}"
	msg="${2}"

	echo "ERROR ${this_script}: ${msg}" 1>&2
	exit ${exit_code}
}

# Manual, output of -h/--help
function show_help () {

	cat <<-EOF

	NAME

	    ${this_script} - Prints the foreign keys of all databases

	SYNOPSIS

	    ${this_script} [OPTIONS]

	DESCRIPTION

	     Prints the foreign keys of all databases owned by the 'root'
         user of this project named 'reactjs'. You need to know the
         mysql password of this user to run this script.

    EXAMPLES

        $ #{this_script} 

            Accessing mysql account of user 'reactjs'
            Enter password:
            +--------------------------+-----+--------------------------+------------------------+----------------+
            | foreign_table            | rel | primary_table            | constraint_name        | fk_columns     |
            +--------------------------+-----+--------------------------+------------------------+----------------+
            | reactjs_quote_app.quote  | ->  | reactjs_quote_app.author | fk_quote_author        | author         |
            | reactjs_quote_app.quote  | ->  | reactjs_quote_app.source | fk_quote_source        | source         |
            | reactjs_quote_app.source | ->  | reactjs_quote_app.author | fk_source_author       | author         |
            | reactjs_quote_app.user   | ->  | reactjs_quote_app.quote  | fk_user_favorite_quote | favorite_quote |
            +--------------------------+-----+--------------------------+------------------------+----------------+

	OPTIONS

	    -v, --verbose

		    Be more informative with output.

	    -h, --help

		    Print this help message
	EOF
}

# Reset all variables that might be set, and start parsing the options
verbose=0

while :
do
    case $1 in
        -h | --help | -\?)
			helping=true
			shift
            ;;
        -v | --verbose)
            # Each instance of -v adds 1 to verbosity
            verbose=$((verbose+1))
			echo "Getting louder, verbosity level: ${verbose}"
            shift
            ;;
        --) # End of all options
            shift
            break
            ;;
        -*)
            echo "WARN: Unknown option (ignored): $1" >&2
            shift
            ;;
        *)  # no more options. Stop while loop
            break
            ;;
    esac
done

# This implements -h|--help
if $helping ; then

	show_help
	exit 0
fi

# Main script code below this line
echo "Accessing mysql account of user 'reactjs'"
mysql -t -u reactjs -p < ../mysql/foreign_keys.sql
